@using Microsoft.AspNetCore.SignalR.Client
@using StreamHub.Services
@inject BlazorSignalRService SignalRService

<!-- Subscription/Unsubscription Button -->
<button @onclick="ToggleSubscription">
    @(IsSubscribed ? "Unsubscribe" : "Subscribe")
</button>

@code {
    [Parameter]
    public string WorkerId { get; set; } = "";

    private bool IsSubscribed = false;

    // Toggle Subscription Logic
    private async Task ToggleSubscription()
    {
        if (IsSubscribed)
        {
            // Unsubscribe from receiving logs
            await UnsubscribeFromLogs();
        }
        else
        {
            // Subscribe to receiving logs
            await SubscribeToLogs();
        }

        IsSubscribed = !IsSubscribed; // Toggle the subscription state
    }

    private async Task SubscribeToLogs()
    {
        if (SignalRService.HubConnection != null)
        {
            // Logik for at tilmelde sig en specifik gruppe/worker
            await SignalRService.HubConnection.SendAsync("SubscribeToLogs", WorkerId); // Tilpasset efter behov
        }
    }

    private async Task UnsubscribeFromLogs()
    {
        if (SignalRService.HubConnection != null)
        {
            // Logik for at afmelde sig en specifik gruppe/worker
            await SignalRService.HubConnection.SendAsync("UnsubscribeFromLogs", WorkerId); // Tilpasset efter behov
        }
    }

    protected override async Task OnInitializedAsync()
    {
        // Start SignalR-forbindelsen, hvis den ikke allerede er startet
        await SignalRService.StartConnectionAsync();
    }
}