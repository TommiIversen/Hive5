@using Common.Models
@using Microsoft.AspNetCore.SignalR.Client
@using StreamHub.Services
@inject BlazorSignalRService SignalRService

<div class="image-container">
    @if (!string.IsNullOrEmpty(_imageData))
    {
        <img src="@_imageData" alt="Worker Image" style="max-width: 260px; height: auto;" />
    }
    else
    {
        <p>No image available.</p>
    }
</div>

@code {
    [Parameter] public string WorkerId { get; set; } = "";
    [Parameter] public string InitialImageData { get; set; } = "";

    private string? _imageData;

    protected override async Task OnInitializedAsync()
    {
        _imageData = InitialImageData;
        SignalRService.HubConnection.On<ImageData>("ReceiveImage", async imageData =>
        {
            if (imageData.WorkerId == WorkerId)
            {
                _imageData = $"data:image/jpeg;base64,{Convert.ToBase64String(imageData.ImageBytes)}";
                await InvokeAsync(StateHasChanged);
            }
        });
    }

    public void Dispose()
    {
        SignalRService.HubConnection.Remove("ReceiveImage");
    }
}