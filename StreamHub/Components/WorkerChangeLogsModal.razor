namespace StreamHub.Components;

@using Common.DTOs

@code {
    [Parameter] public EventCallback OnClose { get; set; }
    [Parameter] public WorkerChangeLogsDto? WorkerChangeLogs { get; set; }
}

<div class="fixed inset-0 bg-gray-800 bg-opacity-75 overflow-y-auto h-full w-full z-50" @onclick="() => OnClose.InvokeAsync()">
    <div class="relative top-20 mx-auto p-2 border w-3/4 shadow-lg rounded-md bg-gray-900 z-60" @onclick:stopPropagation>
        <div class="mt-3 px-2">
            <div class="flex items-center justify-center">
                <div class="text-white text-xl font-bold py-2">
                    Change Logs for Worker @WorkerChangeLogs?.WorkerId
                </div>
            </div>

            @if (WorkerChangeLogs != null && WorkerChangeLogs.Changes.Any())
            {
                @if (WorkerChangeLogs.Changes.Count == 1 && WorkerChangeLogs.Changes[0].ChangeDescription == "No change logs found for this worker.")
                {
                    <!-- Specifik besked, hvis der ingen ændringslogs findes -->
                    <div class="text-gray-300 text-center mt-4">@WorkerChangeLogs.Changes[0].ChangeDescription</div>
                }
                else
                {
                    @foreach (var change in WorkerChangeLogs.Changes)
                    {
                        <div class="bg-gray-700 mb-3 rounded p-2">
                            <span class="text-gray-400">@change.ChangeTimestamp.ToString("dd/MM-yy HH:mm:ss")</span>
                            <span class="text-white"> | @change.ChangeDescription</span>
                            <div class="text-gray-300 ml-4">
                                @change.ChangeDetails
                            </div>
                        </div>
                    }
                }
            }
            else
            {
                <p class="text-gray-300 text-center mt-4">No change logs available.</p>
            }


            <!-- Close button -->
            <div class="flex items-center space-x-2 mt-4">
                <button @onclick="() => OnClose.InvokeAsync()" class="px-4 py-2 rounded bg-gray-700 hover:bg-gray-600 text-white">Close</button>
            </div>
        </div>
    </div>
</div>