@using Common.DTOs.Queries

@code {
    [Parameter] public EventCallback OnClose { get; set; }
    [Parameter] public WorkerChangeLog? WorkerChangeLogs { get; set; }
    private int? openChangeIndex = null; // Track which change detail is open
}

<div class="fixed inset-0 bg-gray-800 bg-opacity-75 overflow-y-auto h-full w-full z-50" @onclick="() => OnClose.InvokeAsync()">
    <div class="relative top-20 mx-auto p-2 border w-3/4 shadow-lg rounded-md bg-gray-900 z-60" @onclick:stopPropagation>
        <div class="mt-3 px-2">
            <div class="flex items-center justify-center">
                <div class="text-white text-xl font-bold py-2">
                    Change Logs for Worker @WorkerChangeLogs?.WorkerId
                </div>
            </div>

            @if (WorkerChangeLogs != null && WorkerChangeLogs.Changes.Any())
            {
                @foreach (var change in WorkerChangeLogs.Changes.Select((value, index) => new { value, index }))
                {
                    <div class="bg-gray-700 mb-3 rounded p-2">
                        <div class="flex justify-between items-center cursor-pointer" @onclick="() => ToggleChangeDetails(change.index)">
                            <div>
                                <span class="text-gray-400">@change.value.ChangeTimestamp.ToLocalTime().ToString("dd/MM-yy HH:mm:ss")</span>
                                <span class="text-white"> | @change.value.ChangeDescription</span>
                            </div>
                            <div>
                                <!-- Toggle arrow icons for expanded/collapsed state -->
                                @if (openChangeIndex == change.index)
                                {
                                    <svg class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
                                        <path stroke-linecap="round" stroke-linejoin="round" d="M19 9l-7 7-7-7"/>
                                    </svg>
                                }
                                else
                                {
                                    <svg class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
                                        <path stroke-linecap="round" stroke-linejoin="round" d="M9 5l7 7-7 7"/>
                                    </svg>
                                }
                            </div>
                        </div>
                        @if (openChangeIndex == change.index)
                        {
                            <pre class="text-gray-300 ml-4 break-words whitespace-pre-wrap overflow-x-auto">
                                @((MarkupString)change.value.ChangeDetails)
                            </pre>
                        }
                    </div>
                }
            }
            else
            {
                <p class="text-gray-300 text-center mt-4">No change logs available.</p>
            }

            <div class="flex items-center space-x-2 mt-4">
                <button @onclick="() => OnClose.InvokeAsync()" class="px-4 py-2 rounded bg-gray-700 hover:bg-gray-600 text-white">Close</button>
            </div>
        </div>
    </div>
</div>

@code {

    private void ToggleChangeDetails(int index)
    {
        openChangeIndex = openChangeIndex == index ? null : index;
    }

}