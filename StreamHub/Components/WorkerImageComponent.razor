@using Common.Models
@using Microsoft.AspNetCore.SignalR.Client
@using StreamHub.Services
@inject BlazorSignalRService SignalRService

<div class="image-container" @key="@(EngineId.ToString() + WorkerId)" style="position: relative;">
    @if (!string.IsNullOrEmpty(_imageData))
    {
        <img src="@_imageData" alt="Worker Image" style="max-width: 260px; height: auto;"/>
        <div class="latency-overlay" style="position: absolute; top: 3px; left: 3px; color: white; background-color: rgba(0, 0, 0, 0.5); padding: 2px 4px; border-radius: 3px; font-size: 12px;">
            Latency: @(_latencyMs) ms
            @if (_imageLost)
            {
                <span style="color: red; margin-left: 5px;">⚠️</span>
            }
        </div>
    }
    else
    {
        <p>No image available.</p>
    }
</div>


@code {
    [Parameter] public Guid EngineId { get; set; }
    [Parameter] public string WorkerId { get; set; } = "";
    [Parameter] public string InitialImageData { get; set; } = "";

    private string? _imageData;
    private long _latencyMs;
    private int _previousImageSequenceNumber = -1;
    private bool _imageLost = false;

    protected override Task OnInitializedAsync()
    {
        _imageData = InitialImageData;
        SignalRService.HubConnection.On<ImageData>($"ReceiveImage-{EngineId}-{WorkerId}", async imageData =>
        {
            _latencyMs = (long)(DateTime.UtcNow - imageData.Timestamp).TotalMilliseconds;
            _imageLost = _previousImageSequenceNumber != -1 && imageData.ImageSequenceNumber != _previousImageSequenceNumber + 1;
            _previousImageSequenceNumber = imageData.ImageSequenceNumber;
            _imageData = $"data:image/jpeg;base64,{Convert.ToBase64String(imageData.ImageBytes)}";
            await InvokeAsync(StateHasChanged);
        });
        return Task.FromResult(Task.CompletedTask);
    }

    public void Dispose()
    {
        Console.WriteLine($"Disposing Image component for worker {WorkerId}");
        SignalRService.HubConnection.Remove($"ReceiveImage-{EngineId}");
    }
}