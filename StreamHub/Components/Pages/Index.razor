@page "/"
@using Microsoft.AspNetCore.SignalR.Client
@using StreamHub.Services
@inject EngineManager EngineManager
@inject BlazorSignalRService SignalRService

@if (!EngineManager.GetAllEngines().Any())
{
    <p>Ingen engines forbundet.</p>
}
else
{
    <div class="p-5">
        <div class="space-y-4">
            @foreach (var engine in EngineManager.GetAllEngines().OrderBy(e => e.Info.EngineName))
            {
                <EngineComponent @key="@($"EngineComponent-{engine.Info.EngineId}")" Engine="engine"/>
            }
        </div>
    </div>
}

@code {

    protected override async Task OnInitializedAsync()
    {
        await SignalRService.StartConnectionAsync();
        SignalRService.HubConnection.On("EngineChange", async () => { await InvokeAsync(StateHasChanged); });
    }

}