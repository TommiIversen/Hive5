@using Common.DTOs
@using Common.DTOs.Events
@using Microsoft.AspNetCore.SignalR.Client
@using StreamHub.Models
@using StreamHub.Services
@inject BlazorSignalRService SignalRService


<EngineExpandablePanel Title="Engine Info">
    <div class="p-2 space-y1 rounded-lg">
        <ul>
            <li class="flex justify-between">
                <span class="font-semibold">IP Address:</span>
                <span>@(string.IsNullOrEmpty(Engine.ConnectionInfo.IpAddress) ? "N/A" : Engine.ConnectionInfo.IpAddress)</span>
            </li>
            <li class="flex justify-between" data-testid="portinfo">
                <span class="font-semibold">Port:</span>
                <span>@(Engine.ConnectionInfo.Port.HasValue ? Engine.ConnectionInfo.Port.Value.ToString() : "N/A")</span>
            </li>
            <li class="flex justify-between">
                <span class="font-semibold">Transport Type:</span>
                <span>@(string.IsNullOrEmpty(Engine.ConnectionInfo.TransportType) ? "N/A" : Engine.ConnectionInfo.TransportType)</span>
            </li>
            <li class="flex justify-between">
                <span class="font-semibold">Online Since:</span>
                <span>@(Engine.ConnectionInfo.OnlineSince.HasValue ? Engine.ConnectionInfo.OnlineSince.Value.ToString("g") : "N/A")</span>
            </li>
            <li class="flex justify-between">
                <span class="font-semibold">Uptime:</span>
                <span>@(Engine.ConnectionInfo.Uptime.HasValue ? Engine.ConnectionInfo.Uptime.Value.ToString(@"dd\.hh\:mm\:ss") : "N/A")</span>
            </li>
            <li class="flex justify-between">
                <span class="font-semibold">EngineId:</span>
                <span>@Engine.Info.EngineId</span>
            </li>

            <li class="flex justify-between">
                <span class="font-semibold">LocalPort:</span>
                <span>@Engine.ConnectionInfo.LocalPort</span>
            </li>

            <li class="flex justify-between">
                <span class="font-semibold">Engine InstallDate:</span>
                <span>@Engine.Info.InstallDate</span>
            </li>

            <li class="flex justify-between">
                <span class="font-semibold">Engine StartDate:</span>
                <span>@Engine.Info.EngineStartDate.ToLocalTime().ToString("yyyy-MM-dd HH:mm:ss")</span>
            </li>


            SystemInfo

            <ul>
                <li class="flex justify-between">
                    <span class="font-semibold">OsName:</span>
                    <span>@Engine.SystemInfo?.OsName</span>
                </li>
                <li class="flex justify-between">
                    <span class="font-semibold">OS Version:</span>
                    <span>@Engine.SystemInfo?.OsVersion</span>
                </li>
                <li class="flex justify-between">
                    <span class="font-semibold">Architecture:</span>
                    <span>@Engine.SystemInfo?.Architecture</span>
                </li>
                <li class="flex justify-between">
                    <span class="font-semibold">OS Uptime:</span>
                    <span>@Engine.SystemInfo?.Uptime</span>
                </li>
                <li class="flex justify-between">
                    <span class="font-semibold">Process Count:</span>
                    <span>@Engine.SystemInfo?.ProcessCount</span>
                </li>
                <li class="flex justify-between">
                    <span class="font-semibold">Platform:</span>
                    <span>@Engine.SystemInfo?.Platform</span>
                </li>
            </ul>

        </ul>

        <h4 class="mt-4 font-semibold">Hub URLs:</h4>
        <div class="space-y-4">
            @if (Engine.Info.HubUrls.Any())
            {
                @foreach (var url in Engine.Info.HubUrls)
                {
                    <div class="bg-slate-800 p-4 rounded-lg shadow-md">
                        <div class="flex mb-2 items-center">
                            <span class="font-semibold mr-2">URL:</span>
                            <div class="break-all">@url.HubUrl</div>
                        </div>
                        <div class="flex mb-2 items-center">
                            <span class="font-semibold mr-2">API Key:</span>
                            <div class="break-all">@url.ApiKey</div>
                        </div>
                        <div class="flex space-x-2">
                            <button class="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded" @onclick="() => EditUrl(url)">Rediger</button>
                            <button class="bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded" @onclick="() => DeleteUrl(url.HubUrl)">Slet</button>
                        </div>
                    </div>
                }
            }
            else
            {
                <div class="text-gray-500">Ingen URLs fundet</div>
            }
        </div>
        <!-- Knap til at tilføje ny URL -->
        <div class="mt-4">
            <button class="bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded" @onclick="AddUrl">Tilføj ny URL</button>
        </div>
    </div>

</EngineExpandablePanel>


@code {
    [Parameter] public required EngineViewModel Engine { get; set; }


    protected override Task OnInitializedAsync()
    {
        SignalRService.HubConnection.On("EngineChange", async () => { await InvokeAsync(StateHasChanged); });
        return Task.CompletedTask;
    }

    private void EditUrl(HubUrlInfo url)
    {
        // Implementér redigeringslogik her
    }

    private async Task DeleteUrl(string urlId)
    {
        Console.WriteLine($"Deleting URL with ID: {urlId}");
        await SignalRService.HubConnection.SendAsync("RemoveHubUrl", urlId, Engine.Info.EngineId);
    }

    private void AddUrl()
    {
        // Implementér logik til at tilføje ny URL
    }

}