@using Microsoft.AspNetCore.SignalR.Client
@using StreamHub.Models
@using StreamHub.Services
@inject EngineManager EngineManager
@inject WorkerService WorkerService
@inject BlazorSignalRService SignalRService

<div class="bg-gray-800 border border-gray-700 p-4 rounded-lg mb-4 grid grid-cols-1 md:grid-cols-4 gap-4 relative">
    @if (string.IsNullOrEmpty(Engine?.ConnectionInfo.ConnectionId))
    {
        <div class="absolute inset-0 bg-black bg-opacity-50 flex flex-col rounded-lg justify-center items-center text-white px-4 py-2" style="backdrop-filter: blur(5px); z-index: 10;">
            <span class="text-2xl font-bold">OFFLINE</span>
            <span>@Engine?.Info.EngineName</span>
            @* <span>Last known IP: @Engine.Info.IpAddress</span> *@
            @* <span>Last seen: @Engine.Info.LastSeen</span> *@
            <button @onclick="() => RemoveEngine(Engine.Info.EngineId)" class="px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white rounded">Remove Engine</button>
        </div>
    }

    <div class="bg-slate-950 p-4 border border-slate-700 shadow-sm rounded-lg md:col-span-1">
        <h2 class="text-xl font-semibold">@Engine?.Info.EngineName</h2>
        <div class="text-gray-400">@Engine?.Info.EngineDescription</div>
        <EngineConnectionInfoComponent Engine="@Engine"/>
        <EngineMetricExpandPanelComponent EngineId="@Engine.Info.EngineId"/>
        <EngineLogPanel Engine="@Engine"></EngineLogPanel>
        <EngineCreateWorker EngineId="@Engine.Info.EngineId"/>
        <EngineMetricLineChartComponent Engine="@Engine"/>
        <EngineMetricCpuUsageBarChart EngineId="@Engine.Info.EngineId"/>
    </div>

    <div class="md:col-span-3">
        @if (Engine.Workers?.Any() == true)
        {
            <div class="grid grid-cols-1">
                @foreach (var worker in Engine.Workers.Values)
                {
                    <WorkerComponent @key="@($"WorkerComponent-{Engine.Info.EngineId}-{worker.WorkerId}")" EngineId="Engine.Info.EngineId" Worker="worker"/>
                }
            </div>
        }
        else
        {
            <p>Ingen workers forbundet.</p>
        }
    </div>
</div>

@code {
    [Parameter] public required EngineViewModel Engine { get; set; }


    private async Task RemoveEngine(Guid engineId)
    {
        await SignalRService.HubConnection.SendAsync("RemoveEngine", engineId);
    }

}